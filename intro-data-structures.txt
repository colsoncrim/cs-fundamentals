1) A line of people at an amusement park ride:

        -The line is composed of members, represented as strings.

        -There is a front to the line, as well as a back.

        -When someone enters the line, place them at the end.

        -People may leave the line whenever they see fit, and those behind them take their place.

      Given the above real-world information, use an array data structure to code the following solution.

        a) Use an array input: ["Vivian", "Ava", "Josh", "Patrick", "Mike"]

            var lineMembers = ["Vivian", "Ava", "Josh", "Patrick", "Mike"];



        b) Insert a new person, "Mary" at the end of the line. In other words, you should insert Mary after Mike.

            lineMembers.push("Mary");



        c) Find a person in line named "Josh." This function should return the position of 2 in the array, (recall that arrays are 0-based).

            var lineMembers = ["Vivian", "Ava", "Josh", "Patrick", "Mike"];
            var found = lineMembers.find(item => item === "Josh");

                console.log(found);




        d) Find a person in line named "Emily." What should your function return if it does not find the item in the array?

            var lineMembers = ["Vivian", "Ava", "Josh", "Patrick", "Mike"];

            function searchMember(lineMembers) {
              for (var i = 0; i < lineMembers.length; i++) {
                if (i === lineMember[i]) {
                    return true;
                }
              }
              else {
                  return false;
              }
            }


        e) What if Ava wants to allow a friend, "Melissa", to cut in line in front of her? How would you code this so Melissa appears before Ava?

            var lineMembers = ["Vivian", "Ava", "Josh", "Patrick", "Mike"];
              console.log(lineMembers.join());
              lineMembers.splice(1, 0, "Melissa");
              console.log(lineMembers.join());



        f) If Patrick wants to leave the line, how would you delete him from the array?

            lineMembers.splice(4, 1);


2) Provide another real-world example that you can model using a data structure.

      Another real world example could be taking inventory of a warehouse, or searching for a certain item in a warehouse.


3) How would your data structure allow developers to access and manipulate the data?

      This data structure could also store information in an array. This would provide easy access for developers to access and manipulate
      data since arrays are common knowledge for developers.
